"""
Django settings for vocab_site project.
Generated by 'django-admin startproject' using Django 1.9.1.
For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

from os import path
from os.path import dirname, abspath

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = path.dirname(path.dirname(path.abspath(__file__)))
PROJECT_DIR = dirname(dirname(dirname(dirname(abspath(__file__)))))

IRI_DOMAIN = "https://w3id.org/xapi/"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'mly4mofw4%zr$!h%gcevs8msuacfxg&(uvjsysx0t$!+maj!ar'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

LOGIN_REDIRECT_URL = 'vocab:userProfile'

# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

#For mail_admins
SERVER_EMAIL = 'adlvocab@gmail.com'
ADMINS = [('Lou', 'lou.wolford.ctr@adlnet.gov')]

# If not specified, EMAIL_BACKEND will default to the SMTP backend. Here are the following arguments for that
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'adlvocab@gmail.com'
EMAIL_HOST_PASSWORD = '$c0rmR0ck$'
EMAIL_USE_SSL = True
EMAIL_TIMEOUT = 10


HTACCESS_SECTION_TEMPLATE = """
\n
# OURTITLEREPLACEMENT Vocabulary
# ---------------------------
# OURTITLEREPLACEMENT vocabualry rewrite rule to serve JSON-LD if requested
RewriteCond %{HTTP_ACCEPT} application/ld\+json
RewriteRule ^OURVOCABREPLACEMENT/?$ OURJSONLDREDIRECTREPLACEMENT [R=303]
RewriteRule ^OURVOCABREPLACEMENT/([a-z-]*)$ OURJSONLDREDIRECTREPLACEMENT [R=303]
RewriteRule ^OURVOCABREPLACEMENT/([a-z-]*)/([a-z-]*)$ OURJSONLDREDIRECTREPLACEMENT [R=303]
# Rewrite rule to serve HTML content if requested
RewriteCond %{HTTP_ACCEPT} !application/rdf\+xml.*(text/html|application/xhtml\+xml)
RewriteCond %{HTTP_ACCEPT} text/html [OR]
RewriteCond %{HTTP_ACCEPT} application/xhtml\+xml [OR]
RewriteCond %{HTTP_USER_AGENT} ^Mozilla/.*
RewriteRule ^OURVOCABREPLACEMENT/?$ OURHTMLREDIRECTREPLACEMENT [R=303]
RewriteRule ^OURVOCABREPLACEMENT/([a-z-]+)$ OURHTMLREDIRECTREPLACEMENT/#$1 [R=303,NE]
RewriteRule ^OURVOCABREPLACEMENT/([a-z-]+)/([a-z-]+)$ OURHTMLREDIRECTREPLACEMENT/#$2 [R=303,NE]
"""



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'vocab',
    'jsonify',
    'el_pagination',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vocab_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'vocab_site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'vocab',
        'USER': 'vsadmin',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '',
        # 'ATOMIC_REQUESTS': 'True',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
# STATIC_ROOT = path.join(path.dirname(__file__), 'static/')
STATIC_URL = '/static/'

MEDIA_ROOT = path.join(PROJECT_DIR, 'media')
MEDIA_URL = '/media/'

REQUEST_HANDLER_LOG_DIR = path.join(PROJECT_DIR, 'logs/django_request.log')
VOCAB_LOG_DIR = path.join(PROJECT_DIR, 'logs/vocab.log')
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'standard': {
            'format': u'%(asctime)s [%(levelname)s] %(name)s: %(message)s'
        },
    },
    'handlers': {
        'vocab': {
            'level':'DEBUG',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': VOCAB_LOG_DIR,
            'maxBytes': 1024*1024*5, # 5 MB
            'backupCount': 5,
            'formatter':'standard',
        },
        'request_handler': {
                'level':'DEBUG',
                'class':'logging.handlers.RotatingFileHandler',
                'filename': REQUEST_HANDLER_LOG_DIR,
                'maxBytes': 1024*1024*5, # 5 MB
                'backupCount': 5,
                'formatter':'standard',
        },
    },
    'loggers': {
        'vocab': {
            'handlers': ['vocab'],
            'level': 'DEBUG',
            'propagate': True
        },
        'django.request': {
            'handlers': ['request_handler'],
            'level': 'WARNING',
            'propagate': True
        },
    }
}